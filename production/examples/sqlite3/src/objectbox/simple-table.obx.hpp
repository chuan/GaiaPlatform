// Code generated by ObjectBox; DO NOT EDIT.

#pragma once

#include <cstdint>

#include <cstdbool>

#include "flatbuffers/flatbuffers.h"

#include "objectbox.h"
#include "objectbox.hpp"

struct simple_table_;

struct simple_table
{
    obx_id id;
    uint64_t field;

    struct _OBX_MetaInfo
    {
        static constexpr obx_schema_id entityId()
        {
            return 2;
        }

        static void setObjectId(simple_table& object, obx_id newId)
        {
            object.id = newId;
        }

        /// Write given object to the FlatBufferBuilder
        static void toFlatBuffer(flatbuffers::FlatBufferBuilder& fbb, const simple_table& object);

        /// Read an object from a valid FlatBuffer
        static simple_table fromFlatBuffer(const void* data, size_t size);

        /// Read an object from a valid FlatBuffer
        static std::unique_ptr<simple_table> newFromFlatBuffer(const void* data, size_t size);

        /// Read an object from a valid FlatBuffer
        static void fromFlatBuffer(const void* data, size_t size, simple_table& outObject);
    };
};

struct simple_table_
{
    static const obx::Property<simple_table, OBXPropertyType_Long> id;
    static const obx::Property<simple_table, OBXPropertyType_Long> field;
};
